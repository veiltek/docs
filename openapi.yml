openapi: 3.0.0

info:
  description: Public facing API for the subscriptions system
  title: Subscription System
  version: 0.0.1

paths:
  /v1alpha/plans/{id}:
    get:
      tags:
        - "Plans"
      parameters:
        - $ref: '#/components/parameters/pathId'
      responses:
        200:
          description: A subscription plan that can be subscribed to
          headers:
            ETag:
              description: The current version of the entity as a quoted integer
              schema:
                type: string
              example: '"1"'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanModel'
        404:
          description: Returned if no such plan with the provided id exists
    post:
      tags:
        - "Plans"
      description: |
        Update a subscription plan's data. You cannot update entitlements with 
        this endpoint - see PATCH /v1alpha/plans/{id}/entitlements
      parameters:
        - $ref: '#/components/parameters/pathId'
        - $ref: '#/components/parameters/ifMatch'
      requestBody:
        $ref: '#/components/requestBodies/PlanUpdateRequest'
      responses:
        200:
          description: The plan was successfully updated
          headers:
            Location:
              description: The url reference location for the updated plan
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanModel'
        400:
          description: The request was malformed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                timestamp: 2023-08-15T21:10:34.812400Z
                status: 400
                error: Bad Request
                errors:
                  name: 
                    - size must be between 1 and 50
                    - must not be blank
                  recurrence.period:
                    - 'must be a one of the following values: DAY, WEEK, MONTH, YEAR'
                  path: /v1alpha/plans
        404:
          description: Returned if no such plan with the provided id exists
        429:
          description: | 
            Your request conflicted with another which also made changes. Perform 
            another get to retrieve the latest version of the entity
  /v1alpha/plans:
    get:
      tags:
        - "Plans"
      parameters:
        - name: page
          in: query
          description: Which page to request of the paginated list
          required: false
          schema:
            type: integer
        - name: namespace
          in: query
          description: The namespace to filter the response list with
          required: false
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: List all available subscription plans
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResult'
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/PlanModel'
    post:
      tags:
        - "Plans"
      requestBody:
        $ref: '#/components/requestBodies/PlanCreationRequest'
      responses:
        201:
          description: The plan was successfully created
          headers:
            Location:
              description: The url reference location for the newly created plan
              schema:
                type: string
                format: uri
                example: /v1alpha/plans/5wbwf6yUxVBcr48AMbz9cb
            ETag:
              description: | 
                The version of the plan, should be used in If-Match headers for 
                subsequent modifications
              schema:
                type: string
                format: '"<quoted integer>"'
                example: '"1"'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanModel'
        400:
          description: The request was malformed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                timestamp: 2023-08-15T21:10:34.812400Z
                status: 400
                error: Bad Request
                errors:
                  name: 
                    - size must be between 1 and 50
                    - must not be blank
                  entitlements[0].quantity:
                    - must not be null
                  recurrence.period:
                    - 'must be a one of the following values: DAY, WEEK, MONTH, YEAR'
                  path: /v1alpha/plans
  
  /v1alpha/plans/{id}/entitlements:
    patch:
      tags:
      - Plans
      parameters:
        - $ref: '#/components/parameters/pathId'
        - $ref: '#/components/parameters/ifMatch'
        - name: X-Patch-Operation
          in: header
          description: | 
            The type of operation we're performing. The request body differs
            based on the operation specified.
          schema:
            type: string
            enum:
              - ADD
              - REMOVE
            example: ADD
      requestBody:
        content:
          application/json:
            schema:
              description: | 
                    EntitlementAddRequest, used in conjunction with 
                    X-Patch-Operation=ADD. If you provide an entitlement that
                    is already included in this plan, it will be replaced with
                    the value specified in this request, quantities are not
                    additive.

                    EntitlementDeleteRequest, used in conjunction with 
                    X-Patch-Operation=REMOVE. Cannot remove all entitlements.
              oneOf:
                - $ref: '#/components/schemas/EntitlementAddRequest'
                - $ref: '#/components/schemas/EntitlementDeleteRequest'        
      responses:
        200:
          description: A successful modification of the entitlements
          headers:
            ETag:
              description: | 
                The version of the plan, should be used in If-Match headers for 
                subsequent modifications
              schema:
                type: string
                format: '"<quoted integer>"'
                example: '"1"'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanModel'
        400:
          description: The request was malformed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                timestamp: 2023-08-15T21:10:34.812400Z
                status: 400
                error: Bad Request
                errors:
                  entitlements:
                    - cannot remove all entitlements
                  path: /v1alpha/plans/5wbwf6yUxVBcr48AMbz9cb/entitlements
        422:
          description: The X-Patch-Operation header provided was not recognised
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                timestamp: 2023-08-15T21:10:34.812400Z
                status: 422
                error: Unprocessable Entity
                errors:
                  X-Patch-Operation:
                    - "Unknown operation: '<op>' Valid values are ADD and REMOVE" 
                  path: /v1alpha/plans/5wbwf6yUxVBcr48AMbz9cb/entitlements
        404:
          description: Returned if no such plan with the provided id exists
        429:
          description: | 
            Your request conflicted with another which also made changes. Perform 
            another get to retrieve the latest version of the entity
                
components:
  parameters:
    pathId:
      name: id
      in: path
      required: true
      schema:
        type: string
      example: 5wbwf6yUxVBcr48AMbz9cb
    ifMatch:
      name: If-Match
      in: header
      required: true
      description: |
        The version we expect the plan entity to be in, must be an 
        integer surrounded by double quotes, the value found in the ETag 
        response header.
      schema:
        type: string
      example: '"1"'
  requestBodies:
    PlanCreationRequest:
      content:
        application/json:
          schema:
            type: object
            required:
              - "name"
              - "entitlements"
              - "recurrence"
            properties:
              name:
                type: string
                description: The administrative name of the plan
                minimum: 1
                maximum: 50
              description:
                type: string
                description: Overall description of the plan
                maximum: 1000
              namespace:
                type: string
                description: The namespace this plan lives in to enable multi tenancy if desired
                minLength: 1
                default: default
              entitlements:
                type: array
                description: | 
                  The entitlements that always come with the plan, do not provide 
                  duplicate entitlements by name
                items:
                  $ref: '#/components/schemas/EntitlementModel'
                minimum: 1
                uniqueItems: true
              recurrence:
                $ref: '#/components/schemas/RecurrenceModel'
    PlanUpdateRequest:
      content:
        application/json:
          schema:
            type: object
            required:
              - "name"
              - "recurrence"
            properties:
              name:
                type: string
                description: The administrative name of the plan
                minimum: 1
                maximum: 50
              description:
                type: string
                description: Overall description of the plan
                maximum: 1000
              recurrence:
                $ref: '#/components/schemas/RecurrenceModel'
  schemas:
    EntitlementAddRequest:
      type: object
      required:
        - "entitlements"
      properties:
        entitlements:
          type: array
          description: | 
            The entitlements that always come with the plan, do not provide 
            duplicate entitlements by name
          items:
            $ref: '#/components/schemas/EntitlementModel'
          minimum: 1
          uniqueItems: true   
    EntitlementDeleteRequest:
      type: object
      required:
        - "entitlements"
      properties:
        entitlements:
          type: array
          description: | 
            The entitlements to remove from the plan. You cannot remove 
            all entitlements.
          items:
            type: string
            minLength: 1
          minimum: 1
          uniqueItems: true
    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          description: The timestamp of when this error occurred
          format: ISO 8601 UTC
        status:
          type: integer
          description: The http status associated with the error
        error:
          type: string
          description: The general error that occurred
        errors:
          type: object
          additionalProperties:
            type: array
            description: Property paths that had issues, in the format "property[.<subproperty>][.<...>]"
            items:
              type: string
              description: Errors associated with the property path, may be empty
        paths:
          type: string
          description: The path this error occurred on
    PlanModel:
      type: object
      properties:
        id:
          type: string
          description: The id of the plan
          format: Base58 url safe id https://github.com/Devskiller/friendly-id
        name:
          type: string
          description: The administrative name of the plan
          minLength: 1
          maxLength: 50
        namespace:
          type: string
          description: The namespace that this plan lives in, defaults to "default"
          minLength: 1
        description:
          type: string
          description: Overall description of the plan
          maximum: 1000
        createdAt:
          type: integer
          format: int64
          description: The UTC unix timestamp of when this plan was created, in milliseconds
        editedAt:
          type: integer
          format: int64
          description: The UTC unix timestamp of when this plan was last edited, in milliseconds
        createdBy:
          type: string
          description: The account id of the user who created the plan
          format: Base58 url safe id https://github.com/Devskiller/friendly-id
        editedBy:
          type: string
          description: The account id of the user who last edited the plan
          format: Base58 url safe id https://github.com/Devskiller/friendly-id
        entitlements:
          type: array
          description: The entitlements that always come with the plan
          items:
            $ref: '#/components/schemas/EntitlementModel'
        recurrence:
          $ref: '#/components/schemas/RecurrenceModel'
    RecurrenceModel:
      type: object
      required:
        - "period"
        - "count"
      properties:
        period:
          type: string
          enum:
            - DAY
            - WEEK
            - MONTH
            - YEAR
        count:
          type: integer
          minimum: 1
    PaginatedResult:
      type: object
      properties:
        total: 
          type: number
        page:
          type: number
        perPage:
          type: number
        hasNext:
          type: boolean
        hasPrevious:
          type: boolean
    EntitlementModel:
      type: object
      required:
        - "name"
        - "quantity"
      properties:
        name:
          type: string
          minLength: 1
        quantity:
          type: integer
          minimum: 1